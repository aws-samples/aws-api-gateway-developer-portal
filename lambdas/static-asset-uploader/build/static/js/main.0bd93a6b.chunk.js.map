{"version":3,"sources":["services/api.js","services/api-catalog.js","pages/Home.jsx","services/state.js","services/self.js","pages/GettingStarted.jsx","pages/Dashboard.jsx","components/ApisMenu.jsx","components/SwaggerUiLayout.jsx","pages/Apis.jsx","components/AlertPopup.jsx","components/SignIn.jsx","components/Register.jsx","components/SignOut.jsx","components/NavBar.jsx","index.js","logo.png"],"names":["cachedClient","catalogPromiseCache","subscriptionsPromiseCache","apiKeyPromiseCache","HomePage","react_default","a","createElement","Fragment","Segment","vertical","textAlign","style","color","backgroundColor","padding","margin","Image","centered","size","src","logo","Header","as","Link","to","Button","positive","Container","fluid","text","awsRegion","window","config","region","cognitoRegion","cognitoUserPoolId","userPoolId","cognitoIdentityPoolId","identityPoolId","cognitoClientId","userPoolClientId","initApiGatewayClient","_ref","arguments","length","undefined","accessKeyId","secretAccessKey","sessionToken","apigClientFactory","newClient","accessKey","secretKey","apiGatewayClient","Promise","resolve","poller","setInterval","clearInterval","updateAllUserData","bustCache","all","updateCatalogAndApisList","updateSubscriptions","apiKeyOrPromise","store","apiKey","then","get","_ref3","data","value","updateApiKey","catalogOrPromise","catalog","_ref$data","subscriptionsOrPromise","subscriptions","_ref2","mapUsageByDate","usage","usedOrRemaining","apiKeyDates","Object","keys","items","forEach","apiKeyId","apiKeyUsage","startDate","dateParts","split","year","month","day","apiKeyDate","Date","setHours","usedOrRemainingIndex","Array","isArray","map","date","setDate","getDate","item","mapApiKeyUsageByDate","dates","index","dailyUsage","sort","confirmMarketplaceSubscription","usagePlanId","token","put","AWS","observable","api","apiList","storeCache","usagePlan","apis","_","cloneDeep","addUsagePlanToApis","reduce","acc","concat","createApiList","updateSubscriptionStatus","computed","subscribed","id","find","sub","cognitoUser","userPool","poolData","UserPoolId","ClientId","isAuthenticated","getCognitoLoginKey","login","email","password","authenticationDetails","AuthenticationDetails","Username","Password","CognitoUser","Pool","CognitoUserPool","reject","authenticateUser","onSuccess","result","credentials","CognitoIdentityCredentials","IdentityPoolId","Logins","defineProperty","getIdToken","getJwtToken","refresh","error","console","post","catch","onFailure","logout","signOut","localStorage","clear","GettingStarted","props","authed","loadUsage","canvasId","start","end","getFullYear","getMonth","toJSON","ctx","document","getElementById","JSON","stringify","chartConfig","type","labels","d","parseInt","toLocaleDateString","datasets","label","lineTension","borderColor","borderWidth","pointRadius","pointHoverRadius","options","scales","yAxes","ticks","beginAtZero","Chart","observer","Grid","container","Row","Column","paddingTop","background","border","borderRadius","Divider","filter","firstApiName","swagger","info","title","extraApiCount","List","Item","key","width","widescreen","marginBottom","Popup","trigger","cursor","content","on","position","Message","toString","Loader","active","_React$Component","ApisMenu","_getPrototypeOf2","_this","classCallCheck","this","_len","args","_key","possibleConstructorReturn","getPrototypeOf","call","apply","isActive","apiId","apiIdInPath","path","params","inherits","createClass","_this2","_this$props","objectWithoutProperties","Menu","assign","inverted","attached","React","Component","InfoReplacement","specSelectors","basePath","host","externalDocs","className","display","flex","marginRight","image","fontWeight","version","SwaggerUiLayout_SubscriptionButtons","SubscriptionButtons","state","onClick","delete","SwaggerLayoutPlugin","components","InfoContainer","ApisPage","updateApi","selectIt","thisApi","getApi","match","swaggerUiConfig","dom_id","plugins","supportedSubmitMethods","spec","onComplete","uiHandler","preauthorizeApiKey","SwaggerUI","errorHeader","errorBody","overflow","components_ApisMenu","icon","Icon","name","circular","Content","AlertPopup","isVisible","message","handleDismiss","setState","hidden","negative","floating","onDismiss","header","SignIn","isSubmitting","signedIn","errorMessage","isOpen","open","close","handleChange","event","handleLogin","preventDefault","e","Redirect","Modal","onOpen","onClose","Form","onSubmit","loading","Input","onChange","autoComplete","Actions","primary","Register","handleRegister","attributeList","signUp","err","register","SignOut","forceUpdate","cloneElement","NavBar","borderless","SignOut_SignOut","SignIn_SignIn","Register_Register","App","getCurrentUser","getSession","session","hashRoute","location","hash","substring","history","pushState","BrowserRouter","components_NavBar","AlertPopup_AlertPopup","Switch","Route","exact","component","Home","Dashboard","Apis","ReactDOM","render","src_App","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.0bd93a6b.chunk.js","sourcesContent":["import AWS from 'aws-sdk'\n\nexport const awsRegion = window.config.region\nexport const cognitoRegion = window.config.region\nexport const cognitoUserPoolId = window.config.userPoolId\nexport const cognitoIdentityPoolId = window.config.identityPoolId\nexport const cognitoClientId = window.config.userPoolClientId\n\nAWS.config.region = cognitoRegion\n\nlet cachedClient\n\nexport function initApiGatewayClient({ accessKeyId, secretAccessKey, sessionToken } = {}) {\n  cachedClient = window.apigClientFactory.newClient({\n    accessKey: accessKeyId,\n    secretKey: secretAccessKey,\n    sessionToken: sessionToken,\n    region: awsRegion\n  })\n}\n\nexport function apiGatewayClient() {\n  if (cachedClient) return Promise.resolve(cachedClient)\n  \n  return new Promise(resolve => {\n    const poller = setInterval(() => {\n      if (cachedClient) {\n        clearInterval(poller)\n        resolve(cachedClient)\n      }\n    }, 100)\n  })\n}\n","import { apiGatewayClient } from './api'\nimport { store } from './state'\n\n/* Catalog and API Utils */\n\n/**\n * \n * Does all operations to get user data at once.\n * \n * @param {Boolean} bustCache=true   Ignore the cache and re-make the calls? Defaults to true.\n */\nexport function updateAllUserData(bustCache = true) {\n  return Promise.all([\n    updateCatalogAndApisList(bustCache),\n    updateSubscriptions(bustCache),\n    updateApiKey(bustCache)\n  ])\n}\n\n/**\n * \n * Update the catalog for the current user. Both request and response are cached, so unless the cache is busted, this should only ever make one network call.\n * \n * @param {Boolean} [bustCache=false]   Ignore the cache and re-make the network call. Defaults to false.\n * \n */\nexport function updateCatalogAndApisList(bustCache = false) {\n  let catalogOrPromise = store.catalog.length ? store.catalog : catalogPromiseCache\n  if (!bustCache && catalogOrPromise) return Promise.resolve(catalogOrPromise)\n\n  return catalogPromiseCache = apiGatewayClient()\n    .then(apiGatewayClient => apiGatewayClient.get('/catalog', {}, {}, {}))\n    .then(({ data = [] }) => (store.catalog = data))\n}\nlet catalogPromiseCache // WARNING: Don't touch this. Should only be used by updateCatalogAndApisList.\n\n/**\n * Return the API with the provided apiId. Can also provide the special strings \"FIRST\" or \"ANY\" to get the first API returned. Can select the api returned as a side-effect.\n * \n * @param {String} apiId   An apiId or the special strings 'FIRST' or 'ANY'. 'FIRST' and 'ANY' both return the first api encountered.\n * @param {Boolean} [selectIt=false]   If true, sets the found API as the current 'selected' API.\n */\nexport function getApi(apiId, selectIt = false) {\n  return updateCatalogAndApisList()\n    .then(() => {\n      let thisApi\n  \n      if (store.apiList.length) {\n        if (apiId === 'ANY' || apiId === 'FIRST') {\n          thisApi = store.apiList[0]\n        }\n\n        else {\n          thisApi = store.apiList.find(api => api.id === apiId)\n        }\n      }\n\n      if (selectIt) store.api = thisApi\n\n      return thisApi\n    })\n}\n\n/* Subscription Utils */\n\n/**\n * Fetch and update subscriptions store. Uses caching to determine if it should actually fetch or return the stored result.\n * \n * @param {Boolean} [bustCache=false]   Ignore the cache and re-make the network call. Defaults to false.\n */\nexport function updateSubscriptions(bustCache = false) {\n  let subscriptionsOrPromise = store.subscriptions.length ? store.subscriptions : subscriptionsPromiseCache\n  if (!bustCache && subscriptionsOrPromise) return Promise.resolve(subscriptionsOrPromise)\n\n  return subscriptionsPromiseCache = apiGatewayClient()\n    .then(apiGatewayClient => apiGatewayClient.get('/subscriptions', {}, {}, {}))\n    .then(({ data }) => (store.subscriptions = data))\n}\nlet subscriptionsPromiseCache // WARNING: Don't touch this. Should only be used by updateCatalogAndApisList.\n\nexport function getSubscribedUsagePlan(usagePlanId) {\n  return store.subscriptions.find(sub => sub.id === usagePlanId)\n}\n\nexport function subscribe(usagePlanId) {\n  return apiGatewayClient()\n    .then(apiGatewayClient => apiGatewayClient.put('/subscriptions/' + usagePlanId, {}, {}))\n    .then(() => updateSubscriptions(true))\n}\n\nexport function unsubscribe(usagePlanId) {\n  return apiGatewayClient()\n    .then(apiGatewayClient => apiGatewayClient.delete(`/subscriptions/${usagePlanId}`, {}, {}))\n    .then(() => updateSubscriptions(true))\n}\n\n/**\n * \n * Fetches and updates the apiKey in the store. Both request and response are cached, so unless the cache is busted, this should only ever make one network call.\n * \n */\nexport function updateApiKey(bustCache) {\n  let apiKeyOrPromise = store.apiKey ? store.apiKey : apiKeyPromiseCache\n  if (!bustCache && apiKeyOrPromise) return Promise.resolve(apiKeyOrPromise)\n\n  return apiGatewayClient()\n    .then(apiGatewayClient => apiGatewayClient.get('/apikey', {}, {}, {}))\n    .then(({data}) => (store.apiKey = data.value))\n}\nlet apiKeyPromiseCache\n\nexport function fetchUsage(usagePlanId) {\n  const date = new Date()\n  const start = new Date(date.getFullYear(), date.getMonth(), 1).toJSON().split('T')[0]\n  const end = new Date().toJSON().split('T')[0]\n  return apiGatewayClient()\n    .then(apiGatewayClient => apiGatewayClient.get('/subscriptions/' + usagePlanId + '/usage', { start, end }, {}))\n}\n\nexport function mapUsageByDate(usage, usedOrRemaining) {\n  const apiKeyDates = {}\n  Object.keys(usage.items).forEach(apiKeyId => {\n    apiKeyDates[apiKeyId] = mapApiKeyUsageByDate(usage.items[apiKeyId], usage.startDate, usedOrRemaining)\n  })\n  \n  const dates = {}\n  Object.keys(apiKeyDates).forEach((apiKeyId, index) => {\n    const apiKeyUsage = apiKeyDates[apiKeyId]\n    apiKeyUsage.forEach(dailyUsage => {\n      const date = dailyUsage[0]\n      const value = dailyUsage[1]\n      \n      if (!dates[date])\n      dates[date] = 0\n      dates[date] += value\n    })\n  })\n  \n  const usageByDate = Object.keys(dates).sort().map(date => [date, dates[date]])\n  \n  return usageByDate\n}\n\nfunction mapApiKeyUsageByDate(apiKeyUsage, startDate, usedOrRemaining) {\n  const dateParts = startDate.split('-')\n  const year = dateParts[0]\n  const month = dateParts[1]\n  const day = dateParts[2]\n  const apiKeyDate = new Date(year, month - 1, day)\n  apiKeyDate.setHours(0, 0, 0, 0)\n  const usedOrRemainingIndex = usedOrRemaining === 'used'\n  ? 0\n  : 1\n  \n  if (apiKeyUsage && !Array.isArray(apiKeyUsage[0]))\n  apiKeyUsage = [apiKeyUsage]\n  \n  return apiKeyUsage.map((usage) => {\n    const date = apiKeyDate.setDate(apiKeyDate.getDate())\n    const item = [date, usage[usedOrRemainingIndex]]\n    apiKeyDate.setDate(apiKeyDate.getDate() + 1)\n    return item\n  })\n}\n\n/* Marketplace integration */\n\nexport function confirmMarketplaceSubscription(usagePlanId, token) {\n  if (!usagePlanId) {\n    return\n  }\n  \n  return apiGatewayClient()\n    .then(apiGatewayClient => apiGatewayClient.put('/marketplace-subscriptions/' + usagePlanId, {}, {\"token\" : token}))\n}","import React from 'react'\n\n// react-router\nimport { Link } from 'react-router-dom'\n\n// semantic-ui\nimport { Header, Segment, Container, Image, Button } from 'semantic-ui-react'\n\nimport logo from '../logo.png'\n\nexport const HomePage = () => (\n  <React.Fragment>\n    <Segment vertical textAlign='center' style={{ color: \"whitesmoke\", backgroundColor: \"slategray\", padding: \"40px 0px\", margin: \"0px !important\" }}>\n      <Image centered size='small' src={logo} />\n      <Header as='h1' style={{ color: \"whitesmoke\" }}>\n        {/* The main header on the home page of your developer portal. */}\n        Developer Portal\n      </Header>\n      <p>\n        {/* A secondary headline. */}\n        Your gateway to the data.\n      </p>\n      <Link to=\"/getting-started\"><Button positive>Get Started</Button></Link>\n      <Link to=\"/apis\" style={{ padding: \"0.78571429em 1.5em 0.78571429em\", color: \"white\" }}>Our APIs</Link>\n    </Segment>\n    {/* Details about what kinds of APIs you can find here. */}\n    <Segment vertical style={{ padding: \"40px 0px\", margin: \"0 !important\" }}>\n      <Container fluid text textAlign='justified' >\n        <Header size='medium'>EXPLORE AND BUILD</Header>\n        <p>Read the Getting Started guide to learn how to hit the ground running to get an application up and running in no time.</p>\n        <p>See what APIs we have to offer, including extensive documentation, and generated SDKs.</p>\n        <p>Sign in to manage your subscriptions, see your current usage, get your API Key, and test against our live API.</p>\n      </Container>\n    </Segment>\n  </React.Fragment>\n)\n\nexport default HomePage\n","import { observable, computed } from 'mobx'\nimport _ from 'lodash'\n\nimport { getSubscribedUsagePlan } from 'services/api-catalog'\n\nexport const store = observable({\n  api: undefined,\n  apiList: undefined,\n\n  /**\n   * We have a bunch of side-effects we need to run when we're setting `catalog` and \n   * `subscriptions`. That's accomplished by using getters and setters. We're storing\n   * the actual data in `storeCache` so that people can't update `catalog` and \n   * `subscriptions` without hitting the side-effects.\n   */\n\n  // Catalog side-effects\n  // 1 - update each api to have a usagePlan object nested in them\n  // 2 - update the apiList based on the catalog \n  // 3 - update the subscribed status of each api\n  set catalog(catalog = []) {\n    storeCache.catalog = addUsagePlanToApis(catalog)\n    store.apiList = createApiList(storeCache.catalog)\n    updateSubscriptionStatus()\n\n    return storeCache.catalog\n  },\n  get catalog() { return storeCache.catalog },\n\n  // Subscription side-effects\n  // 1 - update the subscribed status of each api\n  set subscriptions(subscriptions = []) {\n    storeCache.subscriptions = subscriptions\n    updateSubscriptionStatus()\n\n    return storeCache.subscriptions\n  },\n  get subscriptions() { return storeCache.subscriptions },\n}, {\n  catalog: computed,\n  subscriptions: computed\n})\n\n// This is the cache for the actual catalog and subscriptions. DO NOT MODIFY and DO NOT USE.\nconst storeCache = observable({\n  catalog: [],\n  subscriptions: []\n})\n\n/**\n * A function that takes an input catalog and performs some side-effects on it.\n * \n * - Makes sure each api has a non-recursive 'usagePlan' object\n * - recalculates the `apiList`\n */\nfunction addUsagePlanToApis(catalog) {\n  return catalog.map(usagePlan => {\n    usagePlan.apis = usagePlan.apis.map(api => {\n      api.usagePlan = _.cloneDeep(usagePlan)\n      // remove the apis from the cloned usagePlan so we don't go circular\n      delete api.usagePlan.apis\n      return api\n    })\n\n    return usagePlan\n  })\n}\n\nfunction createApiList(catalog) {\n  return catalog.reduce((acc, usagePlan) => acc.concat(usagePlan.apis), [])\n}\n\n/**\n * A helper function that simple re-builds the subscribed status for each api in the catalog.\n * \n * Should be run every time either the catalog updates or the \n */\nfunction updateSubscriptionStatus() {\n  if (storeCache.catalog)\n    storeCache.catalog.forEach(usagePlan => {\n      let subscribed = !!getSubscribedUsagePlan(usagePlan.id)\n      usagePlan.subscribed = subscribed\n      \n      usagePlan.apis.forEach(api => api.subscribed = subscribed)\n  })\n}\n\nexport default store\n","import AWS from 'aws-sdk'\nimport { CognitoUserPool, CognitoUser, AuthenticationDetails } from 'amazon-cognito-identity-js'\n\n// services\nimport { store } from 'services/state'\nimport { initApiGatewayClient, apiGatewayClient } from 'services/api'\nimport { updateAllUserData } from 'services/api-catalog'\nimport { cognitoIdentityPoolId, cognitoUserPoolId, cognitoClientId, cognitoRegion } from 'services/api'\n\nconst poolData = {\n  UserPoolId: cognitoUserPoolId,\n  ClientId: cognitoClientId\n}\n\nlet cognitoUser\nlet userPool\n\nexport function isAuthenticated() {\n  return cognitoUser\n}\n\nfunction getCognitoLoginKey() {\n  return `cognito-idp.${cognitoRegion}.amazonaws.com/${cognitoUserPoolId}`\n}\n\nexport function init() {\n  // attempt to refresh credentials from active session\n  userPool = new CognitoUserPool(poolData)\n  cognitoUser = userPool.getCurrentUser()\n\n  if (cognitoUser !== null) {\n    cognitoUser.getSession(function(err, session) {\n      if (err) {\n        logout()\n        console.error(err)\n        return\n      }\n\n      const cognitoLoginKey = getCognitoLoginKey()\n      const Logins = {}\n      Logins[cognitoLoginKey] = session.getIdToken().getJwtToken()\n      AWS.config.credentials = new AWS.CognitoIdentityCredentials({\n        IdentityPoolId: cognitoIdentityPoolId,\n        Logins: Logins\n      })\n\n      AWS.config.credentials.refresh((error) => {\n        if (error) {\n          logout()\n          console.error(error)\n        } else {\n          initApiGatewayClient(AWS.config.credentials)\n          updateAllUserData()\n        }\n      })\n    })\n  } else {\n    initApiGatewayClient()\n  }\n}\n\nexport function register(email, password) {\n  localStorage.clear()\n  const attributeList = []\n  return new Promise((resolve, reject) => {\n    userPool.signUp(email, password, attributeList, null, (err, result) => {\n      if (err) {\n        reject(err)\n      } else {\n        resolve(login(email, password))\n      }\n    })\n  })\n}\n\nexport function login(email, password) {\n    const authenticationDetails = new AuthenticationDetails({\n      Username: email,\n      Password: password\n    })\n\n    cognitoUser = new CognitoUser({\n      Username: email,\n      Pool: new CognitoUserPool(poolData)\n    })\n\n    return new Promise((resolve, reject) => {\n      cognitoUser.authenticateUser(authenticationDetails, {\n        onSuccess: (result) => {\n\n          AWS.config.credentials = new AWS.CognitoIdentityCredentials({\n            IdentityPoolId: cognitoIdentityPoolId,\n            Logins: {\n              [getCognitoLoginKey()]: result.getIdToken().getJwtToken()\n            }\n          })\n\n          AWS.config.credentials.refresh((error) => {\n            if (error) {\n              console.error(error)\n            } else {\n              initApiGatewayClient(AWS.config.credentials)\n\n              apiGatewayClient().then(apiGatewayClient => \n                apiGatewayClient.post('/signin', {}, {}, {})\n                  .then(resolve)\n                  .catch(reject)\n              )\n            }\n          })\n        },\n\n        onFailure: reject\n    })\n  })\n}\n\nexport function logout() {\n  if (cognitoUser) {\n    cognitoUser.signOut()\n    cognitoUser = null\n    store.subscriptions = []\n    localStorage.clear()\n  }\n}\n","import React from 'react'\n\nimport { Link } from 'react-router-dom'\n\nimport { Header, Container } from 'semantic-ui-react'\n\nimport { isAuthenticated } from 'services/self'\n\nexport default (props) => {\n  let authed = isAuthenticated()\n  return (\n  <Container style={{ padding: \"40px\" }}>\n    <Header as='h2'>Getting Started</Header>\n\n    <Header as=\"h3\">Create an account and subscribe to APIs</Header>\n    <p>\n      To use any of our APIs you must have a developer account. A developer account gives you an API Key, access to use and test our APIs, and metrics on your usage. { !authed && (`Create or sign in using the buttons in the top right.`)}\n    </p>\n\n    <p>\n      When you first register, your new API Key won't be tied to any of our APIs. To activate it for an API, navigate to <Link to=\"/apis\">APIs</Link>, then find the API you want to use and click `subscribe`. Your API Key is now subscribed to the API and you can make calls to all methods on the API.\n    </p>\n\n    <p>  \n      Figuring out how to use APIs can be hard. Use the “Try it out!” feature to get examples of the request and response shapes of our APIs. The Developer Portal will make an API call to the backend service using your API key and shows a sample <code>curl</code> request with all necessary input parameters and the real response.\n    </p>\n\n    <p>\n      If you need your API Key for any reason, you can always find it on <Link to=\"/dashboard\">your dashboard</Link> after logging in.\n    </p>\n\n    <Header as=\"h3\">Monitor your usage</Header>\n\n    <p>Typically each API has a usage limit set for each API Key. As you scale up your usage of the APIs, you can monitor your usage towards the limits on <Link to=\"/dashboard\">your dashboard</Link>.</p>\n  </Container>\n)}\n","import React from 'react'\n\nimport { Grid, Header, Popup, Loader, Message, List, Divider } from 'semantic-ui-react'\n\nimport Chart from 'chart.js'\nimport { fetchUsage, mapUsageByDate } from 'services/api-catalog'\n\nimport { observer } from 'mobx-react'\n\nimport { store } from 'services/state'\n\nimport _ from 'lodash'\n\nfunction loadUsage(usagePlan, canvasId) {\n  fetchUsage(usagePlan.id)\n    .then((result) => {\n      const data = mapUsageByDate(result.data, 'used')\n      const ctx = document.getElementById(canvasId)\n\n      let oldDataString = JSON.stringify(_.get(usagePlan, 'usage.data', {}))\n      let newDataString = JSON.stringify(data)\n\n      if (oldDataString !== newDataString)\n        usagePlan.usage = { data }\n\n      const chartConfig = {\n        type: 'line',\n        data: {\n          labels: data.map(d => new Date(parseInt(d[0], 10)).toLocaleDateString()),\n          datasets: [\n            {\n              label: 'Usage',\n              data: data.map(d => d[1]),\n              lineTension: 0,\n              backgroundColor: 'rgba(255, 99, 132, 0.2)',\n              borderColor: 'rgba(255,99,132,1)',\n              borderWidth: 2,\n              pointRadius: 4,\n              pointHoverRadius: 6\n            }\n          ]\n        },\n        options: { scales: { yAxes: [ { ticks: { beginAtZero: true } } ] } }\n      }\n\n      new Chart(ctx, chartConfig)\n    })\n    .catch((error) => {\n      usagePlan.usage = { error }\n    })\n}\n\nexport default observer(() => {\n  return (\n    <Grid container>\n      <Grid.Row>\n        <Grid.Column style={{ paddingTop: \"40px\" }}>\n            <Header size=\"medium\">API Key</Header>\n            <code style={{\n              background: \"black\",\n              border: \"1px solid gray\",\n              padding: \"7px 8px\",\n              color: \"lightgray\",\n              borderRadius: \"5px\"\n            }}>\n              {store.apiKey}\n            </code>\n        </Grid.Column>\n      </Grid.Row>\n      <Divider />\n      <Grid.Row>\n\n      {store.catalog\n        .filter(usagePlan => usagePlan.subscribed)\n        // .reduce((acc, usagePlan) => acc.concat(usagePlan, usagePlan, usagePlan, usagePlan, usagePlan), [])\n        .map((usagePlan, index) => {\n\n        let firstApiName = usagePlan.apis[0].swagger.info.title\n        let extraApiCount = usagePlan.apis.length - 1\n        let apiList = usagePlan.apis.reduce((acc, api) => acc.concat(\n          <List.Item key={api.id}>{api.swagger.info.title}</List.Item>\n        ), [])\n        let canvasId = `api-usage-chart-container-${usagePlan.id}` + index\n\n        loadUsage(usagePlan, canvasId)\n\n        return (\n          <Grid.Column width={16} widescreen={8} key={usagePlan.id} style={{ marginBottom: \"40px\" }}>\n            <Header size=\"medium\">\n              Usage for {extraApiCount ? (\n                <Popup\n                  trigger={ <a style={{ cursor: \"pointer\" }}>{firstApiName} and {extraApiCount} more...</a> }\n                  content={ <List> {apiList} </List> }\n                  on={['hover', 'click']}\n                  position=\"right center\"\n                />\n              ) : (\n                firstApiName\n              )}\n            </Header>\n              \n              { !usagePlan.usage ? (\n                <Loader active />\n              ) : ( \n                usagePlan.error ? (\n                  <Message error content={usagePlan.error.toString()} />\n                ) : null\n              )}\n              <canvas id={canvasId} />\n          </Grid.Column>\n        )\n      })}\n      </Grid.Row>\n    </Grid>\n  )\n})\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\n// semantic-ui\nimport { Menu, Loader } from 'semantic-ui-react'\n\n// store\nimport { observer } from 'mobx-react'\nimport { store } from 'services/state'\n\nexport default observer(class ApisMenu extends React.Component {\n  isActive = (apiId, index) => {\n    let apiIdInPath = this.props.path.params.apiId\n    return (apiIdInPath) ? apiId === apiIdInPath : (index === 0)\n  }\n\n  render() {\n    const { path, ...props } = this.props\n    return (\n      <Menu\n        inverted\n        vertical\n        attached\n        style={{ margin: 0, borderRadius: 0 }}\n        {...props}\n      >\n        {!store.apiList ? (\n          <Loader active />\n        ) : (store.apiList && (\n          store.apiList.length ? store.apiList.map((api, index) => (\n            <Menu.Item\n              key={api.id}\n              as={Link}\n              to={`/apis/${api.id}`}\n              active={this.isActive(api.id, index)}\n            >\n              {api.swagger.info.title}\n            </Menu.Item>\n          )) : (\n            <p style={{ padding: \"13px 16px\", color: \"whitesmoke\" }}>No APIs Published</p>\n          )\n        ))}\n      </Menu>\n    )\n  }\n})\n","import React from 'react'\n\n// semantic-ui\nimport { Button, Header, Image, Container } from 'semantic-ui-react'\n\n// services\nimport { subscribe, unsubscribe } from 'services/api-catalog'\nimport { isAuthenticated } from 'services/self'\n\n// state\nimport { observer } from 'mobx-react'\nimport { store } from 'services/state.js'\n\n// Create the plugin that provides our layout component\nexport const SwaggerLayoutPlugin = () => ({ components: { InfoContainer: InfoReplacement } })\n\n// replaces the InfoContainer component\n// https://github.com/swagger-api/swagger-ui/blob/dd3afdc45656bda2a64ae6a7f9bdad006ea98149/src/core/components/layouts/base.jsx\n\nconst InfoReplacement = ({ specSelectors }) => {\n  const basePath = specSelectors.basePath()\n  const host = specSelectors.host()\n  const externalDocs = specSelectors.externalDocs()\n\n  return (\n    <Container fluid textAlign='left' className=\"fixfloat\" style={{ padding: \"40px 0px\" }}>\n      <div style={{ display: \"flex\" }}>\n        <div style={{ flex: \"0 0 auto\", marginRight: \"20px\" }}>\n          <Image size='small' src={store.api.image} />\n        </div>\n        <div>\n          <Header as='h1'>{store.api.swagger.info.title}</Header>\n          <div style={{ display: \"flex\" }}>\n            <div style={{ marginRight: \"20px\" }}>\n              <p style={{ fontWeight: \"bold\" }}>Version</p>\n              <p style={{ fontWeight: \"bold\" }}>Endpoint</p>\n              {/* <p style={{ fontWeight: \"bold\" }}>Usage Plan</p> */}\n            </div>\n            <div>\n              <p>{store.api.swagger.info.version}</p>\n              <p>https://{host}{basePath}</p>\n              {/* <p>{store.api.usagePlan.name}</p> */}\n            </div>\n          </div>\n          <p>{externalDocs}</p>\n          <SubscriptionButtons />\n        </div>\n      </div>\n    </Container>\n  )\n}\n\nconst SubscriptionButtons = observer(class SubscriptionButtons extends React.Component {\n  state = {}\n\n  render() {\n    const { api } = store\n    return (\n      (api && isAuthenticated()) ? (\n        api.subscribed ? (\n          <Button onClick={() => unsubscribe(api.usagePlan.id)}>Unsubscribe</Button>\n        ) : (\n          <Button onClick={() => subscribe(api.usagePlan.id)} >Subscribe</Button>\n        )\n      ) : null\n    )\n  }\n})\n\n\nexport default SwaggerLayoutPlugin","import React from 'react'\n\n// swagger-ui\nimport SwaggerUI from 'swagger-ui'\nimport 'swagger-ui/dist/swagger-ui.css'\n\n// semantic-ui\nimport { Container, Header, Icon } from 'semantic-ui-react'\n\n// services\nimport { getApi } from 'services/api-catalog'\nimport { isAuthenticated } from 'services/self'\n\n// components\nimport ApisMenu from 'components/ApisMenu'\nimport SwaggerLayoutPlugin from 'components/SwaggerUiLayout'\n\n// state\nimport { store } from 'services/state.js'\nimport { observer } from 'mobx-react'\n\nexport default observer(class ApisPage extends React.Component {\n  componentDidMount() { this.updateApi() }\n  componentDidUpdate() { this.updateApi() }\n\n  updateApi = () => {\n    getApi(this.props.match.params.apiId || 'ANY', true)\n      .then(api => {\n        if (api) {\n          let swaggerUiConfig = {\n            dom_id: '#swagger-ui-container',\n            plugins: [SwaggerLayoutPlugin],\n            supportedSubmitMethods: [],\n            spec: api.swagger,\n            onComplete: () => uiHandler.preauthorizeApiKey(\"api_key\", store.apiKey)\n          }\n          if (isAuthenticated()) {\n            delete swaggerUiConfig.supportedSubmitMethods\n          }\n          let uiHandler = SwaggerUI(swaggerUiConfig)\n        }\n      })\n  }\n\n  render() {\n    let errorHeader\n    let errorBody \n\n    if (store.apiList && store.apiList.length === 0) {\n      errorHeader = `No APIs Published`\n      errorBody = `Your administrator hasn't added any APIs to your account. Please contact them to publish an API.`\n    } else if (!store.api && store.apiList && store.apiList.length) {\n      errorHeader = `No Such API`\n      errorBody = `The selected API doesn't exist.`\n    }\n\n    return (\n      <div style={{ display: \"flex\", flex: \"1 1 auto\", overflow: \"hidden\" }}>\n        <ApisMenu path={this.props.match} style={{ flex: \"0 0 auto\" }} />\n        <div className=\"swagger-section\" style={{ flex: \"1 1 auto\", overflow: 'auto' }}>\n          <div className=\"swagger-ui-wrap\" id=\"swagger-ui-container\" style={{ padding: \"0 20px\" }}>\n            {errorHeader && errorBody && (\n              <React.Fragment>\n                <Header as='h2' icon textAlign=\"center\" style={{ padding: \"40px 0px\" }}>\n                  <Icon name='warning sign' circular />\n                  <Header.Content>{errorHeader}</Header.Content>\n                </Header>\n                <Container text textAlign='justified'>\n                  <p>{errorBody}</p>\n                </Container>\n              </React.Fragment>\n            )}\n          </div>\n        </div>\n      </div>\n    )\n  }\n})\n","import React from 'react'\nimport { Message } from 'semantic-ui-react'\n\nexport default class AlertPopup extends React.Component {\n  state = {\n    isVisible: false,\n    message: ''\n  }\n\n  handleDismiss = () => {\n    this.setState({ isVisible: false })\n  }\n\n  render() {\n      return (\n        <Message\n          hidden={!this.state.isVisible}\n          negative\n          floating\n          icon='warning sign'\n          onDismiss={this.handleDismiss}\n          header='Error'\n          content={this.state.message}\n        />\n      )\n  }\n}\n","import React from 'react'\nimport { Button, Form, Message, Modal } from 'semantic-ui-react'\nimport { Redirect } from 'react-router-dom'\nimport { login } from 'services/self'\nimport { confirmMarketplaceSubscription } from 'services/api-catalog'\n\n export default class SignIn extends React.Component {\n   state = {\n     isSubmitting: false,\n     signedIn: false,\n     errorMessage: '',\n     isOpen: false\n   }\n   open = () => this.setState({ isSubmitting: false, errorMessage: '', isOpen: true })\n   close = () => this.setState({ isOpen: false })\n\n   handleChange = (event, { name, value }) => this.setState({ [name]: value })\n   handleLogin = (event) => {\n    event.preventDefault()\n    this.setState({isSubmitting: true})\n\n    login(this.state.email, this.state.password)\n    .then(() => {\n        this.setState({signedIn: true, isSubmitting: false, errorMessage: ''})\n\n        const { usagePlanId, token } = this.props\n\n        if (usagePlanId && token) {\n   \t       return confirmMarketplaceSubscription(usagePlanId, token)\n        }\n    })\n    .catch((e) => this.setState({errorMessage: e.message, isSubmitting: false}))\n  }\n\n  render() {\n    const { isOpen } = this.state\n\n    return this.state.signedIn ? <Redirect to='/apis' /> : (\n      <Modal\n        size='small'\n        open={isOpen}\n        onOpen={this.open}\n        onClose={this.close}\n        trigger={this.props.trigger}\n      >\n        <Modal.Header>Sign in</Modal.Header>\n        <Modal.Content>\n          <Form onSubmit={this.handleLogin} error={!!this.state.errorMessage} loading={this.state.isSubmitting}>\n            <Form.Input label='Email' name='email' onChange={this.handleChange} />\n            <Form.Input type='password' label='Password' name='password' autoComplete='false' onChange={this.handleChange} />\n            <Message error content={this.state.errorMessage} />\n            <Modal.Actions style={{textAlign: 'right'}}>\n              <Button type='button' onClick={this.close}>Close</Button>\n              <Button primary type='submit'>Sign In</Button>\n            </Modal.Actions>\n          </Form>\n        </Modal.Content>\n      </Modal>)\n  }\n}\n","import React from 'react'\nimport { Button, Form, Message, Modal } from 'semantic-ui-react'\nimport { Redirect } from 'react-router-dom'\nimport { register } from 'services/self'\nimport { confirmMarketplaceSubscription } from 'services/api-catalog'\n\n export default class Register extends React.Component {\n  state = {\n    isSubmitting: false,\n    signedIn: false,\n    errorMessage: '',\n    isOpen: false\n  }\n\n  open = () => this.setState({ isSubmitting: false, errorMessage: '', isOpen: true })\n  close = () => this.setState({ isOpen: false })\n\n  handleChange = (event, { name, value }) => this.setState({ [name]: value })\n  handleRegister = (event) => {\n    event.preventDefault()\n    this.setState({ isSubmitting: true })\n\n    register(this.state.email, this.state.password)\n    .then(() => {\n        this.setState({signedIn: true, isSubmitting: false, errorMessage: ''})\n\n        const { usagePlanId, token } = this.props\n\n        if (usagePlanId && token) {\n   \t       return confirmMarketplaceSubscription(usagePlanId, token)\n        }\n    })\n    .catch((e) => this.setState({errorMessage: e.message, isSubmitting: false}))\n  }\n\n  render() {\n    const { isOpen } = this.state\n\n    return this.state.signedIn ? <Redirect to='/apis' /> : (\n      <Modal\n        size='small'\n        open={isOpen}\n        onOpen={this.open}\n        onClose={this.close}\n        trigger={this.props.trigger}\n      >\n        <Modal.Header>Register</Modal.Header>\n        <Modal.Content>\n          <Form onSubmit={this.handleRegister} error={!!this.state.errorMessage} loading={this.state.isSubmitting}>\n            <Form.Input label='Email' name='email' onChange={this.handleChange} />\n            <Form.Input type='password' label='Password' name='password' autoComplete='false' onChange={this.handleChange} />\n            <Message error content={this.state.errorMessage} />\n            <Modal.Actions style={{textAlign: 'right'}}>\n              <Button type='button' onClick={this.close}>Close</Button>\n              <Button primary type='submit'>Register</Button>\n            </Modal.Actions>\n          </Form>\n        </Modal.Content>\n      </Modal>)\n    }\n}\n","import React from 'react'\nimport { Redirect} from 'react-router-dom'\nimport { logout, isAuthenticated } from 'services/self'\n\nexport default class SignOut extends React.Component {\n  logout = () => {\n    logout()\n    this.forceUpdate()\n  }\n\n  render() {\n    return isAuthenticated() ? (\n      React.cloneElement( this.props.trigger, { onClick: this.logout })\n    ) : (\n      <Redirect to='/' />\n    )\n  }\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Menu, Image } from 'semantic-ui-react'\n\nimport { isAuthenticated } from 'services/self'\nimport logo from 'logo.png'\n\n// components\nimport SignIn from './SignIn'\nimport Register from './Register'\nimport SignOut from './SignOut'\n\nexport const NavBar = () => {\n  let authed = isAuthenticated()\n  return (\n    <Menu inverted borderless attached style={{ flex: \"0 0 auto\" }}>\n      <Menu.Item as={Link} to=\"/\">\n        <Image size='mini' src={logo} />\n        Developer Portal\n      </Menu.Item>\n      <Menu.Item as={Link} to=\"/getting-started\">Getting Started</Menu.Item>\n      <Menu.Item as={Link} to=\"/apis\">APIs</Menu.Item>\n      <Menu.Menu position=\"right\">\n        { authed ? (\n          <React.Fragment>\n            <SignOut trigger={<Menu.Item as=\"a\" key=\"logout\">Sign Out</Menu.Item>} />\n            <Menu.Item as={Link} to=\"/dashboard\" key=\"dashboard\">My Dashboard</Menu.Item>\n          </React.Fragment>\n        ) : (\n          <React.Fragment>\n            <SignIn trigger={<Menu.Item as=\"a\" key=\"login\">Sign In</Menu.Item>} />\n            <Register trigger={<Menu.Item as=\"a\" key=\"register\">Register</Menu.Item>} /> \n          </React.Fragment>\n        )}\n      </Menu.Menu>\n    </Menu>\n  )\n}\n\nexport default NavBar\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\n\n// semantic-ui\nimport 'semantic-ui-css/semantic.css'\n\n// pages\nimport Home from 'pages/Home'\nimport GettingStarted from 'pages/GettingStarted'\nimport Dashboard from 'pages/Dashboard'\nimport Apis from 'pages/Apis'\n\n// components\nimport AlertPopup from 'components/AlertPopup'\nimport NavBar from 'components/NavBar'\n\nimport { init } from 'services/self'\nimport './index.css';\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    init()\n\n    // We are using an S3 redirect rule to prefix the url path with #!\n    // This then converts it back to a URL path for React routing\n    const hashRoute = window.location.hash.substring(2)\n    window.history.pushState({}, 'home page', hashRoute)\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n      <React.Fragment>\n        <NavBar />\n        <AlertPopup />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/getting-started\" component={GettingStarted} />\n          <Route path=\"/dashboard\" component={Dashboard} />\n          <Route exact path=\"/apis\" component={Apis} />\n          <Route path=\"/apis/:apiId\" component={Apis} />\n          <Route component={() => <h2>Page not found</h2>} />\n        </Switch>\n        </React.Fragment>\n      </BrowserRouter>\n    )\n  }\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/logo.b950c5f7.png\";"],"sourceRoot":""}